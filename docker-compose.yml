# Use root/example as user/password credentials
version: '3.1'

volumes:
    dbdata:
services:
  
  mongo:
    image: mongo
    restart: always
    ports:
      - 27017:27017
    volumes:
      - ./Mongo/sampledata.archive.gz:/tmp/sampledata.archive.gz
      - dbdata:/data/db
      #- ./Mongo/data:/data/db
    #command: bash -c "mongorestore --username root --password example --gzip --archive=/tmp/sampledata.archive.gz"      
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      RABBITMQ_ERLANG_COOKIE: secret_cookie
  
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 9000:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example

  api:
    tty: true
    build:                #Add to adjust the error: Service api has neither an image nor a build context specified. At least one must be provided.
      context: ./mflix      
    depends_on:
      - mongo
    ports:
      - 5000:5000
    volumes:
      - /app/target
      - ./mflix/src:/app/src
  flight:
    tty: true
    build:                #Add to adjust the error: Service api has neither an image nor a build context specified. At least one must be provided.
      context: ./Flights 
      dockerfile: Dockerfile.dev     
    depends_on:
      - mongo
    ports:
      - 8000:8000
    volumes:
      - /app/target
      - ./Flights/src:/app/src
  airline:
    tty: true
    build:                #Add to adjust the error: Service api has neither an image nor a build context specified. At least one must be provided.
      context: ./Airline
      dockerfile: Dockerfile.dev
    depends_on:
      - mongo
    ports:
      - 8001:8000
    volumes:
      - /app/target
      - ./Airline/src:/app/src
  registry:
    tty: true
    build:                #Add to adjust the error: Service api has neither an image nor a build context specified. At least one must be provided.
      context: ./ServiceRegistry
      dockerfile: Dockerfile.dev
    depends_on:
      - mongo
    ports:
      - 8002:8000
    volumes:
      - /app/target
      - ./ServiceRegistry/src:/app/src
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    volumes:
        - ./.docker/rabbitmq/etc/:/etc/rabbitmq/
        #- ./.docker/rabbitmq/data/:/var/lib/rabbitmq/
        - ./.docker/rabbitmq/logs/:/var/log/rabbitmq/
    ports:
        - 5672:5672
        - 5671:5671
        - 25672:25672
        - 4369:4369
        - 15671:15671
        - 15672:15672